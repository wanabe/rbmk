# Generated from lib/rbmk/node.rb with RBS::Inline

module Rbmk
  # The class of transpiler.
  class Node
    attr_reader prism_node: Prism::Node & Prism::_Node

    attr_reader parent: Node | nil

    @prism_node: Prism::Node & Prism::_Node

    @parent: Node | nil

    @rb_src: String

    # @rbs prism_node: Prism::Node prism_node
    # @rbs parent: Node
    # @rbs return: void
    def initialize: (Prism::Node prism_node, ?parent: Node) -> void

    # @rbs location: Prism::Location
    # @rbs return: bool
    def contain?: (Prism::Location location) -> bool

    @children: Array[Node]

    # @rbs return: Array[Node]
    def children: () -> Array[Node]

    @ancestors: Array[Node]

    # @rbs return: Array[Node]
    def ancestors: () -> Array[Node]

    # @rbs () -> Enumerator[Node, void]
    #    | () { (Node) -> void } -> void
    def each: () -> Enumerator[Node, void]
            | () { (Node) -> void } -> void

    # @rbs return: String
    def inspect: () -> String
  end
end
